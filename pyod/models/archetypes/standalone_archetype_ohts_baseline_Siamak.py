#!/usr/bin/env python2
# -*- coding: utf-8 -*-
"""
Created on Wed Aug 21 17:24:51 2019

@author: anshul thakur
"""

import sys
# insert at 1, 0 is the script path (or '' in REPL)
sys.path.insert(1, './auxillary_codes/')

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn import cluster, mixture
from sklearn.decomposition import PCA
from sklearn.manifold import TSNE
import matplotlib.colors as mcol
import matplotlib.cm as cm
import matplotlib.pyplot as plt
from pandas.plotting import scatter_matrix
import spams
import operator
import pickle
from archetypal_analysis import getArchetypes, getDeepArchetypes, decrease_correlation
from VF_plot_library import plot_VF  # Siamak added 

########################################################################

def read_ohts_data(file_path):
    visual_fields=pd.read_csv(file_path)
    idx_30_2to_24_2_ohts= np.array([19,18,37,38,17,16,15,34,35,36,14,13,12,11,30,31,32,33,10,9,8,1,7,26,20,27,28,29,6,5,4,3,2,21,22,23,24,25,63,62,61,60,59,40,41,42,43,44,67,66,65,58,64,45,39,46,47,48, 71,70,69,68,49,50,51,52,74,73,72,53,54,55,76,75,56,57])
    VF_test_points=["TP" + str(i) for i in idx_30_2to_24_2_ohts]
    atts= ["ran_id","randyear"]
    atts.extend( VF_test_points )
    atts.extend( ["MDINDEX", "PSDINDEX","labels"] )
    data=visual_fields[atts]
    return data


###############################################################################

#reading data
# file_path='./datasets/ohts_baseline_with_labels_siamak.csv'   # siamak: ./ or ../  , Ubuntu machine
# file_path='../auxillary_codes/ohts_VFs_longitudinal_with_labels_abnormal_VFs-12-2019.csv'   # siamak: ./ or ../  , Ubuntu machine
# file_path='/Users/siamakyousefi/Dropbox (UTHSC GGI)/Active Folder/Python Programs/Python-OHTS/Data Generated by Programs/ohts_VFs_longitudinal_with_labels_abnormal_VFs-12-2019.csv'   # siamak: mac laptop
file_path='/Users/siamakyousefi/Dropbox (UTHSC GGI)/Active Folder/Tmp Exchange Folder/archetypes18_OHTS_normalVFs.csv'   # this file generated by R, classic archetype program, NOT SPAMS



# data=read_ohts_data(file_path)
data= pd.read_csv(file_path)    # siamak
idx_30_2_ohts= np.array([19,18,37,38,17,16,15,34,35,36,14,13,12,11,30,31,32,33,10,9,8,1,7,26,20,27,28,29,6,5,4,3,2,21,22,23,24,25,63,62,61,60,59,40,41,42,43,44,67,66,65,58,64,45,39,46,47,48, 71,70,69,68,49,50,51,52,74,73,72,53,54,55,76,75,56,57])
tp= ["TP" + str(i) for i in idx_30_2_ohts]
# idx= data['UNUSED']== "b'F'"   # added by siamak, index of abnormal VFs
tp= data[tp] #get TP data
tp=tp.to_numpy()
# tp= [idx]
###################################################################################   

#### get 30 archetypes------------- and select 18, 18 archetypes gave least RSS in preliminary analysis


archetypes=getArchetypes(tp,number=30,robustness=False)
archetypes_decorrelated=decrease_correlation(archetypes,18)


deep_archetypes=getDeepArchetypes(tp,number=30,robustness=False,layers=3)
deep_archetypes_decorrelated=decrease_correlation(deep_archetypes,18)




np.save('./archetypes_lon_VFs_abnormal_field_siamak.npy',archetypes)  # siamak
np.save('./archetypes_decorrelated_lon_VFs_abnormal_field_siamak.npy',archetypes_decorrelated) # siamak

np.save('./deep_archetypes_lon_VFs_abnormal_field_siamak.npy',deep_archetypes)
np.save('./deep_archetypes_decorrelated_lon_VFs_abnormal_field_siamak.npy',deep_archetypes_decorrelated)

# np.save('./dictionaries/archetypes_siamak.npy',archetypes)
# np.save('./dictionaries/archetypes_decorrelated_siamak.npy',archetypes_decorrelated)

# np.save('./dictionaries/deep_archetypes_siamak.npy',deep_archetypes)
# np.save('./dictionaries/deep_archetypes_decorrelated_siamak.npy',deep_archetypes_decorrelated)


 # Plotting archetypes , added by Siamak
 # plot_VF_multiple(deep_archetypes_decorrelated, 16, 32)
 
for i in range(0,17):  # we have 18 decorrelated archetypes
 print(i)
 a= np.around(deep_archetypes_decorrelated[:,i],0).astype(int)        
 fig=plt.figure(figsize=(4,4))
 ax= fig.add_subplot()
 plot_VF(vfData=a, ax=ax, cbar= True, annot= True, fontSize=10, test_type="30_2", vmin=16, vmax=32, rightEye=True )
 #ax.set_title('aa_'+str(i+1))     
 # fig.savefig('./diff.png', dpi=100)    
 fig.show()   
 
 
  